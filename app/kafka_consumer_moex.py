# app/kafka_consumer_moex.py
import json
import csv
import os
import time
from datetime import datetime
from kafka import KafkaConsumer

def run_moex_consumer():
    print("üöÄ Starting MOEX Kafka Consumer...")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Å—é–º–µ—Ä –¥–ª—è MOEX —Ç–æ–ø–∏–∫–∞
    consumer = KafkaConsumer(
        'moex-market-data',
        bootstrap_servers=['kafka:9092'],
        group_id='moex_csv_writer_group',
        auto_offset_reset='earliest',
        enable_auto_commit=True
    )
    
    print("‚úÖ Connected to Kafka")
    print("üìä Waiting for MOEX messages...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –Ω–µ—Ç
    log_dir = '/app/logs'
    if not os.path.exists(log_dir):
        os.makedirs(log_dir)
    
    csv_file = os.path.join(log_dir, 'kafka_messages_moex.csv')
    
    # –°—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    message_count = 0
    
    try:
        for message in consumer:
            message_count += 1
            
            # –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            data = json.loads(message.value.decode('utf-8'))
            
            print(f"üì® Message {message_count}: {data.get('contract')} - {data.get('date')} - {data.get('price')}")
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ CSV
            file_exists = os.path.isfile(csv_file)
            
            with open(csv_file, 'a', newline='', encoding='utf-8') as f:
                writer = csv.writer(f, delimiter=';')
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–æ–≤—ã–π
                if not file_exists:
                    writer.writerow([
                        'kafka_timestamp', 'message_offset', 'message_count',
                        'contract', 'date', 'price', 'volume', 'currency',
                        'name_rus', 'source', 'sync_timestamp'
                    ])
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                writer.writerow([
                    datetime.now().isoformat(),
                    message.offset,
                    message_count,
                    data.get('contract', ''),
                    data.get('date', ''),
                    data.get('price', ''),
                    data.get('volume', ''),
                    data.get('currency', ''),
                    data.get('name_rus', ''),
                    data.get('source', ''),
                    data.get('sync_timestamp', '')
                ])
            
            print(f"‚úÖ Saved to CSV: {csv_file}")
            
    except KeyboardInterrupt:
        print(f"üõë Consumer stopped. Processed {message_count} messages")
    except Exception as e:
        print(f"‚ùå Error: {e}")
    finally:
        consumer.close()

if __name__ == "__main__":
    run_moex_consumer()